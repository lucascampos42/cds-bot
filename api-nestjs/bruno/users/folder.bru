meta {
  name: Usu√°rios
  type: folder
}

docs {
  # Sistema de Usu√°rios

  Esta pasta cont√©m todas as requisi√ß√µes relacionadas ao gerenciamento de usu√°rios da aplica√ß√£o.

  ## Endpoints Dispon√≠veis:

  ### üë• **Get All Users** - Listar Usu√°rios
  - **M√©todo**: GET `/users`
  - **Acesso**: Autenticado (JWT obrigat√≥rio)
  - **Autoriza√ß√£o**: Baseada em ownership e roles
  - **Descri√ß√£o**: Lista usu√°rios com pagina√ß√£o e filtros

  ### üë§ **Get User By ID** - Obter Usu√°rio
  - **M√©todo**: GET `/users/{id}`
  - **Acesso**: Autenticado (JWT obrigat√≥rio)
  - **Autoriza√ß√£o**: Ownership (pr√≥prios dados) ou roles superiores
  - **Descri√ß√£o**: Obt√©m dados detalhados de um usu√°rio espec√≠fico

  ### ‚úèÔ∏è **Update User** - Atualizar Usu√°rio
  - **M√©todo**: PATCH `/users/{id}`
  - **Acesso**: Autenticado (JWT obrigat√≥rio)
  - **Autoriza√ß√£o**: Ownership (pr√≥prios dados) ou roles superiores
  - **Descri√ß√£o**: Atualiza dados do usu√°rio (parcial)

  ### üóëÔ∏è **Delete User** - Excluir Usu√°rio
  - **M√©todo**: DELETE `/users/{id}`
  - **Acesso**: Autenticado (JWT obrigat√≥rio)
  - **Autoriza√ß√£o**: Ownership (pr√≥prios dados) ou roles superiores
  - **Descri√ß√£o**: Remove usu√°rio do sistema

  ### üîê **Create User (Admin)** - Cria√ß√£o Administrativa
  - **M√©todo**: POST `/users`
  - **Acesso**: Apenas ADMIN (JWT + role verification)
  - **Autoriza√ß√£o**: Restrito a administradores
  - **Descri√ß√£o**: Cria usu√°rios com privil√©gios avan√ßados
  - **Recursos**: Qualquer role, ativa√ß√£o imediata, controle de bloqueio

  ## Sistema de Autoriza√ß√£o:

  ### üèõÔ∏è **Hierarquia de Roles**
  ```
  SUPERADMIN > ADMIN > GERENTE > FUNCIONARIO > CLIENTE
  ```

  ### üîí **Ownership Guard**
  - **CLIENTE**: Acesso apenas aos pr√≥prios dados
  - **FUNCIONARIO**: Acesso ampliado (configur√°vel)
  - **GERENTE+**: Acesso total a usu√°rios subordinados
  - **ADMIN+**: Acesso total ao sistema

  ### üõ°Ô∏è **Prote√ß√µes Implementadas**
  - Autentica√ß√£o JWT obrigat√≥ria
  - Verifica√ß√£o de ownership por ID
  - Valida√ß√£o de hierarquia de roles
  - Preven√ß√£o de escala√ß√£o de privil√©gios
  - Auditoria completa de opera√ß√µes

  ## Diferen√ßas entre Cria√ß√£o:

  | Aspecto | Registro P√∫blico (`/auth/register`) | Cria√ß√£o Admin (`/users`) |
  |---------|-------------------------------------|--------------------------|
  | **Acesso** | P√∫blico | Apenas ADMIN |
  | **Role** | Sempre CLIENTE | Qualquer role |
  | **Ativa√ß√£o** | Email obrigat√≥rio | Configur√°vel |
  | **Valida√ß√µes** | B√°sicas | Avan√ßadas |
  | **Auditoria** | Limitada | Completa |

  ## C√≥digos de Resposta:

  ### ‚úÖ **Sucesso**
  - **200**: Opera√ß√£o realizada com sucesso
  - **201**: Usu√°rio criado com sucesso (apenas admin)

  ### ‚ö†Ô∏è **Erro do Cliente**
  - **400**: Dados inv√°lidos fornecidos
  - **401**: Token JWT ausente ou inv√°lido
  - **403**: Acesso negado (role insuficiente)
  - **404**: Usu√°rio n√£o encontrado
  - **409**: Conflito (dados j√° existem)

  ### üö® **Erro do Servidor**
  - **500**: Erro interno do servidor

  ## Auditoria e Compliance:

  - Todas as opera√ß√µes s√£o registradas no audit trail
  - Logs incluem usu√°rio respons√°vel, IP e timestamp
  - Rastreabilidade completa para compliance
  - Dados sens√≠veis s√£o automaticamente sanitizados

  ## Configura√ß√£o de Ambiente:

  ```env
  # Configura√ß√µes de Autoriza√ß√£o
  JWT_SECRET=your-secret-key
  JWT_EXPIRES_IN=15m

  # Configura√ß√µes de Ownership
  ENABLE_OWNERSHIP_GUARD=true
  STRICT_OWNERSHIP_MODE=true
  ```

  ## Exemplos de Uso:

  1. **Cliente**: Pode apenas visualizar/editar pr√≥prios dados
  2. **Funcion√°rio**: Acesso ampliado conforme configura√ß√£o
  3. **Gerente**: Pode gerenciar usu√°rios subordinados
  4. **Admin**: Acesso total + cria√ß√£o de usu√°rios

  Consulte cada endpoint individual para exemplos detalhados de requisi√ß√µes e respostas.
}
